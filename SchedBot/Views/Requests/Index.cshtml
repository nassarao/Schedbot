@model SchedBot.Models.RequestViewModel
@using SchedBot.Helpers;

@{
    ViewBag.Title = "Requests";
    ViewBag.Current = "Requests";
}


<link href="~/Content/daterangepicker.min.css" rel="stylesheet" type="text/css" />

<div>
    <div class="col-md-12 col-sm-12 margin-bottom-20">
        <button class="btn green-meadow btn-outline sbold" id="newRequest"><i class="fa fa-plus"></i>&nbsp; New Request</button>
    </div>
    <div class="col-md-12">
        <div id="newRequest" class="modal fade in" data-toggle="modal" data-target="#requestNewModal">
        </div>
        <div class="portlet light portlet-fit">
            <div class="portlet-title">
                <div class="caption font-schedBot">
                    <span>Requests</span>
                </div>
            </div>
            <div class="portlet-body table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th class="col-md-2">Type</th>
                            <th class="col-md-5">Employee(s)</th>
                            <th class="col-md-2">Status</th>
                            <th class="col-md-1 text-center">Approve</th>
                            <th class="col-md-1 text-center">Deny</th>
                            <th class="col-md-1 text-center">Details</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var req in Model.Requests)
                        {
                            <tr>
                                <td class="col-md-2">@req.requestDTO.RequestType </td>
                                <td>@req.sending.FirstName @req.sending.LastName @if (req.receiving != null)
                                {<i class="fa fa-exchange"></i> @req.receiving.FirstName @req.receiving.LastName}</td>
                                <td>@req.requestDTO.Status</td>



                                    @if (req.requestDTO.RequestType == "Time Off")
                                    {
                                        String timeOffApproveClass = "approveRequest";
                                        String timeOffDenyClass = "denyRequest";
                                        if (req.requestDTO.Status != "Pending" || !User.IsInRole("Manager"))
                                        {
                                            timeOffApproveClass = timeOffApproveClass + " disabled-link font-grey";
                                            timeOffDenyClass = timeOffDenyClass + " disabled-link font-grey";
                                        }
                                        else
                                        {
                                            timeOffApproveClass = timeOffApproveClass + " font-dark";
                                            timeOffDenyClass = timeOffDenyClass + " font-dark";
                                        }
                                                <td class="col-md-1 text-center"><a href="#" id="requestApprove" class="@timeOffApproveClass" data-requestId="@req.requestDTO.RequestId"><i class="fa fa-2x fa-check"></i></a></td>
                                                <td class="col-md-1 text-center"><a href="#" id="requestDeny" class="@timeOffDenyClass" data-requestId="@req.requestDTO.RequestId"><i class="fa fa-2x fa-times"></i></a></td>
                                                <td class="col-md-1 text-center"><a href="#" id="viewTimeOffDetails" class="viewTimeOffDetails font-dark" data-toggle="modal" data-target="#timeOffDetailsModal" data-firstName="@req.sending.FirstName" data-lastName="@req.sending.LastName" data-startTimeOff="@req.requestDTO.StartTimeOff" data-endTimeOff="@req.requestDTO.EndTimeOff" data-requestReason="@req.requestDTO.Reason" data-requestStatus="@req.requestDTO.Status" data-denyExplanation="@req.requestDTO.StatusExplanation"><i class="fa fa-2x fa-commenting-o"></i></a></td>
                                    }
                                    @if (req.requestDTO.RequestType == "Trade")
                                    {
                                        String tradeApproveClass = "approveRequest";
                                        String tradeDenyClass = "denyRequest";

                                        if (req.requestDTO.Status == "Pending")
                                        {
                                            //only trade recipient should have buttons
                                            if(Model.loggedInUserId == req.receiving.UserId)
                                            {
                                                tradeApproveClass = tradeApproveClass + " font-dark";
                                                tradeDenyClass = tradeDenyClass + " font-dark";
                                            }
                                            else
                                            {
                                                tradeApproveClass = tradeApproveClass + " disabled-link font-grey";
                                                tradeDenyClass = tradeDenyClass + " disabled-link font-grey";
                                            }

                                        }
                                        else if(req.requestDTO.Status == "Employee Approved")
                                        {
                                            //only manager should have buttons
                                            if (User.IsInRole("Manager"))
                                            {
                                                tradeApproveClass = tradeApproveClass + " font-dark";
                                                tradeDenyClass = tradeDenyClass + " font-dark";
                                            }
                                            else
                                            {
                                                tradeApproveClass = tradeApproveClass + " disabled-link font-grey";
                                                tradeDenyClass = tradeDenyClass + " disabled-link font-grey";
                                            }
                                        }
                                        else
                                        {
                                            tradeApproveClass = tradeApproveClass + " disabled-link font-grey";
                                            tradeDenyClass = tradeDenyClass + " disabled-link font-grey";
                                        }
                                        <td class="col-md-1 text-center"><a href="#" id="requestApprove" class="@tradeApproveClass" data-requestId="@req.requestDTO.RequestId"><i class="fa fa-2x fa-check"></i></a></td>
                                        <td class="col-md-1 text-center"><a href="#" id="requestDeny" class="@tradeDenyClass" data-requestId="@req.requestDTO.RequestId"><i class="fa fa-2x fa-times"></i></a></td>
                                        <td class="col-md-1 text-center"><a href="#" id="viewTradeDetails" class="font-dark viewTradeDetails" data-toggle="modal" data-target="#tradeDetailsModal" data-senderFirstName="@req.sending.FirstName" data-senderLastName="@req.sending.LastName" data-senderShiftDay="@req.original.GetDateTimeOfShift().ToShortDateString()" data-senderShiftStart="@Helper.TimeSpanToString(req.original.Shift.Start)" data-senderShiftEnd="@Helper.TimeSpanToString(req.original.Shift.End)" data-receiveFirstName="@req.receiving.FirstName" data-receiveLastName="@req.receiving.LastName" data-receiveShiftDay="@req.trading.GetDateTimeOfShift().ToShortDateString()" data-receiveShiftStart="@Helper.TimeSpanToString(req.trading.Shift.Start)" data-receiveShiftEnd="@Helper.TimeSpanToString(req.trading.Shift.End)" data-requestReason="@req.requestDTO.Reason" data-requestStatus="@req.requestDTO.Status" data-denyExplanation="@req.requestDTO.StatusExplanation"><i class="fa fa-2x fa-commenting-o"></i></a></td>

                                    }


                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div id='requestDetails' class='modal fade in' data-toggle="modal" data-target="#requestDetailsModal">
        </div>
        <div id='requestDeny' class='modal fade in' data-toggle="modal" data-target="#requestDenyModal">
        </div>
        <div id='requestApprove' class='modal fade in' data-toggle="modal" data-target="#requestApproveModal">
        </div>
    </div>




    @Html.Partial("timeOffDetailsModalPartial")
    @Html.Partial("tradeDetailsModalPartial")

    <!-- ************************************* Deny Modal ***************************************** -->
    @Html.Partial("DenyModalPartial")

    <!-- ************************************* Request Deny End ***************************************** -->
    <!-- ************************************* Approve Modal ***************************************** -->
    @Html.Partial("ApproveModalPartial")

    <!-- ************************************* Request Approve End ***************************************** -->
    <!-- ************************************* New Request Modal ***************************************** -->
    @Html.Partial("NewRequestModal", Model)

</div>


@*@Scripts.Render("~/bundles/jquery")*@

<script src="~/Scripts/jquery-1.10.2.js" type="text/javascript"></script>
<script src="~/Scripts/moment.min.js" type="text/javascript"></script>
<script src="~/Scripts/daterangepicker2.js" type="text/javascript"></script>
<script>


    $('input[name="daterange"]').daterangepicker();
    $('button[name="daterange"]').click(function () {
        $('input[name="daterange"]').trigger("click");
    });

    $(document).ready(function () {


        $(".viewTimeOffDetails").click(function () {
            var firstName = $(this).data("firstname");
            var lastName = $(this).data("lastname");
            var startTime = $(this).data('starttimeoff');
            var endTime = $(this).data('endtimeoff');
            var status = $(this).data('requeststatus');
            var reason = $(this).data('requestreason');
            var denyReason = $(this).data('denyexplanation');

            console.log(startTime, endTime, status, reason);
            $('#employeeName').html(firstName + " " + lastName);
            $('#requestTimeSpan').html(startTime + " - " + endTime);
            $('#requestStatus').html(status);
            $('#requestReason').html(reason);
            if (denyReason) {
                $('#denyReason').html(denyReason);
            }
            else {
                $('#denyReasonDiv').hide();
                $('#denyLabel').hide()
            }
        });



        $(".viewTradeDetails").click(function () {
            var senderFirstName = $(this).data("senderfirstname");
            var senderLastName = $(this).data("senderlastname");
            var receiverFirstName = $(this).data("receivefirstname");
            var receiverLastName = $(this).data("receivelastname");
            var senderShiftDay = $(this).data('sendershiftday');
            var senderShiftStart = $(this).data('sendershiftstart');
            var senderShiftEnd = $(this).data('sendershiftend');
            var receiverShiftStart = $(this).data('receiveshiftstart');
            var receiverShiftEnd = $(this).data('receiveshiftend');
            var receiverShiftDay = $(this).data('receiveshiftday');
            var status = $(this).data('requeststatus');
            var reason = $(this).data('requestreason');
            var denyReason = $(this).data('denyexplanation');
            console.log("Deny reason", denyReason);


            $('#sendingUser').html(senderFirstName + " " + senderLastName);
            $('#receivingUser').html(receiverFirstName + " " + receiverLastName);
            $('#originalDate').html(senderShiftDay);
            $('#tradingDate').html(receiverShiftDay);
            $('#originalTimes').html(senderShiftStart + " - " + senderShiftEnd);
            $('#tradingTimes').html(receiverShiftStart + " - " + receiverShiftEnd);
            $('#tradeStatus').html(status);
            $('#tradeReason').html(reason);
            if (denyReason) {
                $('#denyReason').html(denyReason);
            }
            else {
                $('#denyReasonDiv').hide();
                $('#denyLabel').hide()
            }
        });





        $('#newRequest').click(function () {

            console.info("made inside new request click");
            $('#requestNewModal').modal('show');

        });

        var itemToApprove;
        $('.approveRequest').click(function () {

            itemToApprove = $(this).data("requestid")
            $('#requestApproveModal').modal('show');

        });

        $(".approveRequestConfirmBtn").click(function () {

            $.ajax({
                url: '@Url.Action("ApproveRequest", "Requests")'
            , type: "POST"
                , data: {
                    requestId: itemToApprove
            }
            , success: function (response) {
                $('#requestApproveModal').modal('toggle');


                swal({
                    title: 'Success!',
                    text: "You successfully approved this request!",
                    type: 'success',
                    showCancelButton: false,
                    confirmButtonText: 'OK'
                }).then(function () {
                    location.reload();
                })

            }
            , error: function (response) {
                $('#requestApproveModal').modal('toggle');
                console.log(response);
                sweetAlert("Oops...", "Something went wrong!", "error");
            }
        });


        });


        var itemToDeny;
        $('.denyRequest').click(function () {

            itemToDeny = $(this).data("requestid")
            $('#requestDenyModal').modal('show');

        });



        $(".denyRequestConfirmBtn").click(function () {

            var denyReason = $(".denyReason").val();
            console.log("Deny Reason", denyReason);

            $.ajax({
            url: '@Url.Action("DenyRequest", "Requests")'
            , type: "POST"
                , data: {
                    requestId: itemToDeny,
                    reason: denyReason
            }
            , success: function (response) {
                $('#requestDenyModal').modal('toggle');


                swal({
                    title: 'Success!',
                    text: "You successfully denied this request!",
                    type: 'success',
                    showCancelButton: false,
                    confirmButtonText: 'OK'
                }).then(function () {
                    location.reload();
                })

            }
            , error: function (response) {
                $('#requestDenyModal').modal('toggle');
                console.log(response);
                sweetAlert("Oops...", "Something went wrong!", "error");
            }
        });


        });



        $('#requestDetails').click(function () {

            console.info("made inside new request click");
            $('#requestDetailsModal').modal('show');

        });




        $("#timeOffRange").hide();



        $(document).on("change", "#newRequestType", function () {

            var requestType = $("#newRequestType").val();
            var dynamicHTML = {};
            var url = $("#changingHtml").data("request-url");
            if (requestType == "trade") {

                $("#changingHtml").load(url);
                $("#timeOffRange").hide();
            }
            else if (requestType == "timeOff") {
                dynamicHTML = '';
                $("#newRequestHTML").html(dynamicHTML);
                $("#timeOffRange").show();
            }
            else if (requestType != "timeOff") {
                $("#timeOffRange").hide();
            }

        });

        $(document).on("change", "#Users", function () {
            var selectedUserValue = $("#Users").val();
            console.log(selectedUserValue);
            var url = $("#TradableShifts").data("request-url");
            console.log(url);
            $("#TradableShifts").load(url, { userId: selectedUserValue });
        });


    });
</script>
