@model SchedBot.Areas.Management.Models.SchedulesIndexModel
@{
    ViewBag.Title = "SchedBot - Schedules";
    ViewBag.Current = "Schedules";
}


<link href="~/Content/daterangepicker.min.css" rel="stylesheet" type="text/css" />
<link href="~/Content/bootstrap-datepicker3.min.css" rel="stylesheet" type="text/css" />
<link href="~/Content/bootstrap-timepicker.min.css" rel="stylesheet" type="text/css" />
<link href="~/Content/bootstrap-datetimepicker.min.css" rel="stylesheet" type="text/css" />
<link href="~/Content/clockface.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" href="~/Scripts/TimePicker/themes/default.css" id="theme_base">
<link rel="stylesheet" href="~/Scripts/TimePicker/themes/default.time.css" id="theme_time">

@using (Html.BeginForm("CreateSchedule", "Schedules", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <div class="col-md-12 col-sm-12 margin-bottom-20">
        <button class="btn green-meadow btn-outline sbold" type="submit" id="createSched"><i class="fa fa-plus"></i>&nbsp; Create Schedule</button> <br /> <br />
        <button id="testLoadTable" type="button" data-request-url="@Url.Action("LoadScheduleTable","Schedules",new { Area = "Management"})" class="btn green-meadow btn-outline sbold">Test Loading Table</button>
    </div>
}

@using (Html.BeginForm("FinalizeSchedule", "Schedules", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
<div class="col-md-12 col-sm-12 margin-bottom-20">
    <button id="finalizeSched" type="submit"class="btn green-meadow btn-outline sbold" style="float:right">Finalize Schedule</button>
    </div>
}
    <div class="col-md-12 col-sm-12">
        <div class="portlet box grey-mint">
            <div class="portlet-title">
                <div class="caption">Schedule</div>
            </div>
            <div class="portlet-body table-responsive">
                <div class="col-md-12 col-sm-12 margin-bottom-15 well">
                    <form class="form-horizontal">
                        <div class="col-md-3">
                            <div class="col-md-3 control-label">Dates:</div>
                            <div class="col-md-9">

                                @{
                                    List<SelectListItem> schedulesSelectList = new List<SelectListItem>();


                                    schedulesSelectList.Add(new SelectListItem());
                                    foreach (var sched in Model.Schedules)
                                    {

                                        if (sched.Flag == SchedbotDTOs.Schedule.Flags.Current)
                                        {
                                            @Html.HiddenFor(model => sched.Id, new { id = "currentSched" })

                                        }

                                        SelectListItem item = new SelectListItem { Value = sched.Id.ToString(), Text = sched.StartDate.ToString("MM/dd/yyyy") + " - " + sched.EndDate.ToString("MM/dd/yyyy") };

                                        schedulesSelectList.Add(item);


                                    }


                                    List<SelectListItem> userSelectList = new List<SelectListItem>();
                                    userSelectList.Add(new SelectListItem() { Value = "0", Text = "All Users" });
                                    foreach (var user in Model.UserDTOs)
                                    {
                                        userSelectList.Add(new SelectListItem { Value = user.UserId.ToString(), Text = user.FirstName + " " + user.LastName });
                                    }

                                }

                                @Html.DropDownListFor(model => model.Schedules, schedulesSelectList, new { @class = "form-control" })




                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="col-md-3 control-label">Employee:</div>
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.UserDTOs, userSelectList, new { @class = "form-control" })


                            </div>
                        </div>
                        <div class="col-md-3">
                            <button class="btn btn-outline yellow-lemon">View Schedule</button>
                        </div>
                        <div class="col-md-2">
                            <button class="btn green-meadow btn-outline sbold" id="newScheduledShift" type="button"><i class="fa fa-plus"></i>&nbsp; Add and Assign Shift</button>
                        </div>
                    </form>
                </div>
                @Html.Partial("ScheduleTablePartial", Model.UserShiftScheduleDTOs)
            </div>
        </div>
    </div>




    <!-- ************************************* New Scheduled Shift Modal Start ***************************************** -->
    @Html.Partial("NewScheduledShiftModal")

    <!-- ************************************* New Scheduled Shift Modal End ***************************************** -->



    <script src="~/Scripts/jquery-1.10.2.js" type="text/javascript"></script>
    <script src="~/Scripts/moment.min.js" type="text/javascript"></script>
    <script src="~/Scripts/daterangepicker.js" type="text/javascript"></script>
    <script src="~/Scripts/TimePicker/picker.js"></script>
    <script src="~/Scripts/TimePicker/picker.time.js"></script>



    @*<script src="~/Scripts/bootstrap-datepicker.min.js" type="text/javascript"></script>
        <script src="~/Scripts/bootstrap-timepicker.min.js" type="text/javascript"></script>
        <script src="~/Scripts/bootstrap-datetimepicker.min.js" type="text/javascript"></script>
        <script src="~/Scripts/clockface.js" type="text/javascript"></script>*@
    @*<script src="../assets/pages/scripts/components-date-time-pickers.min.js" type="text/javascript"></script>*@

    @*@Scripts.Render("~/Scripts/Schedules")*@
    <script>
        $('input[name="daterange"]').daterangepicker();
        $('button[name="daterange"]').click(function () {
            $('input[name="daterange"]').trigger("click");
        });
    </script>
    <script>

        $("#testLoadTable").click(function () {

            var url = $(this).data("request-url");

            $("#schedTable").load(url, { scheduleId: "46", userId: "4" })
        });


        $('#newScheduledShift').click(function () {

            console.info("made inside new shift click");
            //getRoles();
            $('#scheduledShiftNewModal').modal('show');
            //$('#timepicker')
            document.getElementById("timepicker").readOnly = false;
            document.getElementById("timepicker2").readOnly = false;






            $('#newScheduledShiftSubmit').click(function () {

                var model_to_update = $('#newScheduledShiftForm');
                //var userId = $('#user_UserId').val();

                console.info("Inside create and assign schedule click...", model_to_update.serialize());


                $.ajax({
                    url: '@Url.Action("Create", "Schedules")'
                    , type: "POST"
                    , data: model_to_update.serialize()
                    , success: function (response) {
                        $('#scheduledShiftNewModal').modal('toggle');

                        getRoles(userId);
                        swal('Success!', 'Shift successfully added and assigned', 'success');

                    }
                    , error: function (response) {
                        $('#scheduledShiftNewModal').modal('toggle');
                        //sweetAlert("Oops...", "Something went wrong!", "error");

                        swal({
                            title: 'Oops...',
                            text: "Something went wrong! Would you like to return to the modal?",
                            type: 'error',
                            showCancelButton: true,
                            confirmButtonText: 'Yes, return to modal',
                            cancelButtonText: 'No, cancel',
                            confirmButtonClass: 'btn btn-primary margin-right-10',
                            cancelButtonClass: 'btn btn-danger',
                            buttonsStyling: false
                        }).then(function () {
                            $('#scheduledShiftNewModal').modal('toggle');
                        }, function (dismiss) {
                            // dismiss can be 'cancel', 'overlay',
                            // 'close', and 'timer'
                            if (dismiss === 'cancel') {
                                //hook in way to clear data
                            }
                        })

                    }
                });



            });







        });










        function getRoles() {

            $.getJSON('@Url.Action("GetListOfRoles", "JobRoles")', function (data) {
                //  var items = [];
                //  $.each( data, function( key, val ) {
                //    items.push( "<li id='" + key + "'>" + val + "</li>" );
                //  });
                //
                //  $( "<ul/>", {
                //    "class": "my-new-list",
                //    html: items.join( "" )
                //  }).appendTo( "body" );
            });


        }
















    </script>
