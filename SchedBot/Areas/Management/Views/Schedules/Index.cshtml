@model SchedBot.Areas.Management.Models.SchedulesIndexModel
@{
    ViewBag.Title = "SchedBot - Schedules";
    ViewBag.Current = "Schedules";
}


<link href="~/Content/daterangepicker.min.css" rel="stylesheet" type="text/css" />
<link href="~/Content/bootstrap-datepicker3.min.css" rel="stylesheet" type="text/css" />
<link href="~/Content/bootstrap-timepicker.min.css" rel="stylesheet" type="text/css" />
<link href="~/Content/bootstrap-datetimepicker.min.css" rel="stylesheet" type="text/css" />
<link href="~/Content/clockface.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" href="~/Scripts/TimePicker/themes/default.css" id="theme_base">
<link rel="stylesheet" href="~/Scripts/TimePicker/themes/default.time.css" id="theme_time">

@using (Html.BeginForm("CreateSchedule", "Schedules", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <div class="col-md-12 col-sm-12 margin-bottom-20">
        <button class="btn green-meadow btn-outline sbold" type="submit" id="createSched"><i class="fa fa-plus"></i>&nbsp; Create Schedule</button>
    </div>
}


<div class="col-md-12 col-sm-12">
    <div class="portlet box grey-mint">
        <div class="portlet-title">
            <div class="caption">Schedule</div>
        </div>
        <div class="portlet-body table-responsive">
            <div class="col-md-12 col-sm-12 col-xs-12 margin-bottom-15 well">
                <form class="form-horizontal">
                    <div class="col-md-4 col-sm-12 col-xs-12 form-group">
                        <div class="col-md-3 control-label">Dates:</div>
                        <div class="col-md-9">

                            @{
                                List<SelectListItem> schedulesSelectList = new List<SelectListItem>();
                                

                                schedulesSelectList.Add(new SelectListItem());
                                foreach (var sched in Model.Schedules)
                                {
                                    
                                    if (sched.Flag == SchedbotDTOs.Schedule.Flags.Current)
                                    {
                                      @Html.HiddenFor(model => sched.Id,new { id = "currentSched"})

                                    }
                                    
                                        SelectListItem item = new SelectListItem { Value = sched.Id.ToString(), Text = sched.StartDate.ToString("MM/dd/yyyy") + " - " + sched.EndDate.ToString("MM/dd/yyyy") };

                                        schedulesSelectList.Add(item);
                                    

                                }


                                List<SelectListItem> userSelectList = new List<SelectListItem>();
                                userSelectList.Add(new SelectListItem() { Value = "0", Text = "All Users" });
                                foreach (var user in Model.UserDTOs)
                                {
                                    userSelectList.Add(new SelectListItem { Value = user.UserId.ToString(), Text = user.FirstName + " " + user.LastName });
                                }

                            }

                            @Html.DropDownListFor(model => model.Schedules, schedulesSelectList, new { @class = "form-control", @name="schedulesDropDown", @id= "schedulesDropDown" })




                        </div>
                    </div>
                    <div class="col-md-4 col-sm-12 col-xs-12 form-group">
                        <div class="col-md-3 control-label">Employee:</div>
                        <div class="col-md-9">
                            @Html.DropDownListFor(model => model.UserDTOs, userSelectList, new { @class = "form-control", @name= "usersDropDown", @id= "usersDropDown" })


                        </div>
                    </div>
                    <div class="col-md-2 col-sm-6 col-xs-12 form-group">
                    <div class="col-md-2 col-sm-6 col-xs-12">
                        <button name="viewSchedBtn" id="viewSchedBtn" type="button" data-request-url="@Url.Action("LoadScheduleTable","Schedules",new { Area = "Management"})" class="btn btn-outline yellow-lemon"><i class="fa fa-search"></i>&nbsp; View Schedule</button>
                    </div>
                    </div>
                    <div class="col-md-2 col-sm-6 col-xs-12 form-group">
                        <div class="col-md-2 col-sm-6 col-xs-12">
                            <button class="btn btn-outline grey-mint" type="button" name="finalizeScheduleBtn" id="finalizeScheduleBtn"><i class="fa fa-calendar-check-o "></i> &nbsp; Finalize Schedule</button>
                            @*<button class="btn green-meadow btn-outline sbold" id="newScheduledShift" type="button"><i class="fa fa-plus"></i>&nbsp; Add and Assign Shift</button>*@
                        </div>
                        </div>
</form>
            </div>
            @Html.Partial("ScheduleTablePartial", Model.UserShiftScheduleDTOs)
        </div>
    </div>
</div>




<!-- ************************************* New Scheduled Shift Modal Start ***************************************** -->
@Html.Partial("NewScheduledShiftModal")

<!-- ************************************* New Scheduled Shift Modal End ***************************************** -->



<script src="~/Scripts/jquery-1.10.2.js" type="text/javascript"></script>
<script src="~/Scripts/moment.min.js" type="text/javascript"></script>
<script src="~/Scripts/daterangepicker.js" type="text/javascript"></script>
<script src="~/Scripts/TimePicker/picker.js"></script>
<script src="~/Scripts/TimePicker/picker.time.js"></script>



@*<script src="~/Scripts/bootstrap-datepicker.min.js" type="text/javascript"></script>
    <script src="~/Scripts/bootstrap-timepicker.min.js" type="text/javascript"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.min.js" type="text/javascript"></script>
    <script src="~/Scripts/clockface.js" type="text/javascript"></script>*@
@*<script src="../assets/pages/scripts/components-date-time-pickers.min.js" type="text/javascript"></script>*@

@*@Scripts.Render("~/Scripts/Schedules")*@
<script>
    $('input[name="daterange"]').daterangepicker();
    $('button[name="daterange"]').click(function () {
        $('input[name="daterange"]').trigger("click");
    });
</script>
<script>

    $(document).ready(function () {
        this.currentSched = document.getElementById("currentSched").value;
        var cSValue = currentSched.value;
        console.log("currentSched", cSValue.toString());
        $("#schedulesDropDown").ready(function () {
            var schedDD = $("#schedulesDropDown").val(cSValue);


            //running same code as viewBtnClick but not calling that click method to avoid showing button as being clicked on the screen
            var url = $("#viewSchedBtn").data("request-url");
            var schedDropdownId = $("#schedulesDropDown").val();
            var userDropdownId = $("#usersDropDown").val();
            $("#schedTable").load(url, { scheduleId: schedDropdownId, userId: userDropdownId })


        });

        

    })


    console.log

    $("#viewSchedBtn").click(function () {

        var url = $(this).data("request-url");
        var schedDropdownId = $("#schedulesDropDown").val();
        var userDropdownId = $("#usersDropDown").val();

        $("#schedTable").load(url, { scheduleId: schedDropdownId, userId: userDropdownId })
    });




    $("#finalizeScheduleBtn").click(function () {
        console.log("Inside finalize click...");
        swal({
            title: 'Are you sure?',
            text: "Are you sure you would like to finalize the schedule? You won't be able to revert this!",
            type: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, finalize it!'
        }).then(function () {
            //remove this swal and insert code to make ajax call and display success/error
            swal(
                'Success!',
                'Your schedule has been finalized.',
                'success'
            )
        })
    });




    $('#newScheduledShift').click(function () {

        console.info("made inside new shift click");
        $('#scheduledShiftNewModal').modal('show');
        document.getElementById("timepicker").readOnly = false;
        document.getElementById("timepicker2").readOnly = false;



        $('#newScheduledShiftSubmit').click(function () {

            var model_to_update = $('#newScheduledShiftForm');
            //var userId = $('#user_UserId').val();

            console.info("Inside create and assign schedule click...", model_to_update.serialize());


            $.ajax({
                url: '@Url.Action("Create", "Schedules")'
                , type: "POST"
                , data: model_to_update.serialize()
                , success: function (response) {
                    $('#scheduledShiftNewModal').modal('toggle');

                    getRoles(userId);
                    swal('Success!', 'Shift successfully added and assigned', 'success');

                }
                , error: function (response) {
                    $('#scheduledShiftNewModal').modal('toggle');
                    //sweetAlert("Oops...", "Something went wrong!", "error");

                    swal({
                        title: 'Oops...',
                        text: "Something went wrong! Would you like to return to the modal?",
                        type: 'error',
                        showCancelButton: true,
                        confirmButtonText: 'Yes, return to modal',
                        cancelButtonText: 'No, cancel',
                        confirmButtonClass: 'btn btn-primary margin-right-10',
                        cancelButtonClass: 'btn btn-danger',
                        buttonsStyling: false
                    }).then(function () {
                        $('#scheduledShiftNewModal').modal('toggle');
                    }, function (dismiss) {
                        // dismiss can be 'cancel', 'overlay',
                        // 'close', and 'timer'
                        if (dismiss === 'cancel') {
                            //hook in way to clear data
                        }
                    })

                }
            });



        });







    });











</script>